CREATE TABLE Product
(
	PID Int NOT null AUTO_INCREMENT,
    Name varchar(20),
    Brand varchar(20),
    Category varchar(20),
    BatteryLife double(5,2),
    PriceBDT double(5,2),
    PRIMARY KEY (PID)
);

INSERT INTO product(Name,Brand,Category,BatteryLife,PriceBDT)
VALUES
	('iPhone 15','Apple','Smartphone',20,999.99),
	('Galaxy','Samsung','Smartphone',18,799.99),
	('Pixel 8','Google','Smartphone',24,699.99),
	('MacBook Pro','Apple','Laptop',12,2000),
	('XPS 13','Dell','Laptop',10,1500),
	('ThinkPad X1','Lenovo','Laptop',9,1300),
	('Surface Laptop 5','Microsoft','Laptop',11,1600),
	('iPad Air','Apple','Tablet',10,599.99),
	('Galaxy Tab S9','Samsung','Tablet',13,699.99),
	('Echo Dot 5th Gen','Amazon','Smart Speaker',0,49.99),
	('Nest Mini','Google','Smart Speaker',0,39.99),
	('Apple Watch Ultra','Apple','Smartwatch',36,799.99),
	('Galaxy Watch 6','Samsung','Smartwatch',48,399.99),
	('iPhone 15','Apple','Smartphone',20,999.99),
	('Galaxy S23','Samsung','Smartphone',18,799.99);
	
	
B/Q: Retrieve all products in the Smartphone Category
A : 
	SELECT *
	FROM Product
	WHERE Category = 'Smartphone';
	

C/Q : Fetch only the name and price of all products ,
A : 
	SELECT Name,PriceBDT
	FROM product;
D/Q : List all products with a Battery_life greater than 10 hours.
A : 
	SELECT *
	FROM Product
	WHERE BatteryLife > 10
	
E/Q : Retrieve products that cost between $200 and $800
A : 
	SELECT *
	FROM Product
	WHERE PriceBDT BETWEEN 200 AND 800;
	
F/Q : Find products with a name that status with Galaxy
A : 
	SELECT *
	FROM Product
	WHERE Name LIKE 'Galaxy%';
	
G/Q : Calculate the average price of all pruducts.
A : 
	SELECT AVG(PriceBDT)
	FROM Product;
	
H/Q : Find the Maximum and minumum price of products in the Laptop Category	
A : 
	SELECT MAX(PriceBDT) AS MaximumPrice, MIN(PriceBDT) AS MinimumPrice
	FROM Product
	WHERE Category = 'Laptop';
I/Q : Fetch products whose price is higher than the average price 
A :
	SELECT *
	FROM Product
	WHERE PriceBDT > (SELECT AVG(PriceBDT) FROM Product);
	
J/Q : Update hte price of all products in the Table category by reducing it by 10%

A : 
	UPDATE Product
	SET PriceBDT = PriceBDT * 0.90;

K/Q : Delete all products from the Smart Speker Category
A :
	DELETE FROM Product
	WHERE Category = 'Smart Speaker';
	
	
	
5/Q
A : 
	CREATE TABLE Person
(
	Driver_ID Int NOT null AUTO_INCREMENT,
    Name varchar(20),
    Address varchar(20),
    PRIMARY KEY (Driver_ID)
);


CREATE TABLE Car
(
	License Int(16),
    Model varchar(20),
    Year int(5),
    Driver_ID int,
    PRIMARY KEY (License),
    FOREIGN KEY (Driver_ID) REFERENCES person(Driver_ID)
);

6/Q 
A: 
	CREATE TABLE Customer 
(
	Customer_ID Int NOT null AUTO_INCREMENT,
    Name varchar(20),
    Email varchar(20),
    City varchar(20),
    Age int(3),
    PRIMARY KEY (Customer_ID)
 );  
 
 
 CREATE TABLE ORDER
(
	ORDER_ID Int(16),
    Customer_ID int (20),
    ORDER_date int(5),
    Amoun int,
    PRIMARY KEY (ORDER_ID),
    FOREIGN KEY (Driver_ID) REFERENCES Customer(Driver_ID)
);


INSERT INTO customer(Name,Email,city,age)
VALUES
	('Alice Johnson','alice@gmail.com','New York',25),
     ('Bob Smith','bob.smith@yahoo.com','Los Angeles',25),
     ('Charlie Brown','Charlie@gmail.com','Chicago',25),
     ('Diana Prince','diana@amazon.com','Los Angeles',25),
     ('Eric Adams','eric.adams@hotmail.com','Los Angeles',25);
	 
	 
INSERT INTO or_der(ORDER_ID,Customer_ID,ORDER_date,Amount)
VALUES
	(101,1,2023,200),
     (102,2,2023,350),
      (103,3,2023,150),
       (104,1,2023,450),
        (105,4,2023,300);
		
Retrieve all customers and their orders